import logging
from loader import Admins, Users, dp,bot
from aiogram import types
from states.states import *
from keyboards.default import markups
from images import *
from keyboards.inline import inlinemarkups

# import profanity_check
dp.register_message_handler(chatgpt_handler, state='chatgpt',content_types=['text'])
dp.register_message_handler(dall_e_handler ,state='dall_e',content_types=['text'])
dp.register_message_handler(translator_handler ,state='translator',content_types=['text'])

@dp.message_handler()
async def bot_message(message: types.Message):
    if message.chat.type == 'private':
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state = dp.current_state(user=message.from_user.id)
        if message.text == '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üåÑ':
            with open('images/textimage.png','rb') as photo1:
                await bot.send_photo(message.chat.id,photo=photo1 , caption ='–≠—Ç–æ —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ç—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å, –∞ –ø–æ—Ç–æ–º –±–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                                reply_markup=markups.secondMenu)
            await state.set_state('dall_e')
            await dall_e_handler(message)

        elif message.text == '–†–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ üìö':
            with open('images/Translate.png','rb') as photo2:
                await bot.send_photo(message.chat.id,photo=photo2 , caption ='–≠—Ç–æ —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞, –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –µ–≥–æ –Ω–∞ –†—É—Å—Å–∫–∏–π.',
                                reply_markup=markups.secondMenu)
            await state.set_state('translator')
            await translator_handler(message)
        elif message.text in [ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ' ,'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é' ,'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü']:
            if message.from_user.id  in [int(admin_id) for admin_id in Admins]:
                if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
                    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
                    await bot_mailing.text.set()
                elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é':
                    stats_week_message = db.get_weekly_statistics()
                    await message.answer(stats_week_message)
                elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü':
                    stats_mounth_message =  db.get_mounthly_statistics()
                    await message.answer(stats_mounth_message)
            else:
                pass
        else: 
            if await state.get_state() != 'chatgpt':
            # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ "chatgpt", —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ –Ω–∞ "chatgpt"
                await state.set_state('chatgpt')
                await message.answer('–≠—Ç–æ —Ä–µ–∂–∏–º –í—Å–µ–∑–Ω–∞–π–∫–∞, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã ChtGpt')
                await chatgpt_handler(message)
            